<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis3.dao.mapper.StudentMapper">
	<!-- ############################## resultMap정의 ############################# -->
	<resultMap id="studentResultMap" type="com.mybatis3.domain.Student" >
	<result column="stud_id" property="studId"/>
	<result column="name" property="name"/>
	<result column="email" property="email"/>
	<result column="dob" property="dob"/>
	
	</resultMap>
	
	<resultMap id="studentWithAddressResultMap" type="com.mybatis3.domain.Student" >
	<result column="stud_id" property="studId"/>
	<result column="name" property="name"/>
	<result column="email" property="email"/>
	<result column="dob" property="dob"/>
	<association property="address" javaType="com.mybatis3.domain.Address" >
		<result column="ADDR_ID" property="addrId"/>
		<result column="STREET" property="street"/>
		<result column="CITY" property="city"/>
		<result column="ZIP" property="zip"/>
		<result column="COUNTRY" property="country"/>
	
	</association>
	</resultMap>
	<!-- ########################################################################### -->
	<!-- 
	/**************************************************
	 	SELECT [student]
	**************************************************/
	/*
	 * select sql의결과타입이 DTO[DTO List] 객체인경우
	 * resultType :  Dto
	 */
	 -->
	<select id="findAllStudents" resultType="com.mybatis3.domain.Student">
		select stud_id as studid, name, email, dob from students
	</select>
	
	 <select id="findStudentById" parameterType="int" resultType="Student">
	 	select stud_id as studid , name, email, dob from students where stud_id=#{studId}
	 </select>
	 
	<!-- 
	/*
	 * select sql의결과타입이 DTO[DTO List] 객체인경우
	 * resultMap :  DTO
	 */
	 -->
	 <select id="findStudentByIdResultMap" parameterType="int" resultMap="studentResultMap">
	 	select stud_id, name, email, dob from students where stud_id=#{studId}
	 </select>
	 <select id="findAllStudentsResultMap" resultMap="studentResultMap">
	 	select stud_id, name, email, dob from students
	 </select>
	<!-- 
	/**************************************************
	 	SELECT[student + address JOIN]( 1 : 1 )
	**************************************************/
	/*
	 * select sql의결과타입이 DTO,VO,Domain객체인경우
	 * resultMap : studentWithAddressResultMap
	 */
	 -->
	<select id="findStudentByIdWithAddress" 
	 		 parameterType="int"
	 		 resultMap="studentWithAddressResultMap">
	 	select stud_id, name, email,phone, a.addr_id, street, city, state, zip, country
  		FROM students s 
      	left outer join addresses a 
      	on s.addr_id=a.addr_id
      	where s.stud_id=#{studId}
	 
	 </select>
	 <!-- 
	/**************************************************
	 SELECT[students + courses[course_enrollment] JOIN( 1 : N )
	**************************************************/
	/*
	 * select sql의결과타입이 DTO,VO,Domain객체인경우
	 * resultMap : studentWithCoursesResultMap
	 */
	 -->
	 
	 
	 
	<!-- 
	/**************************************************
	INSERT
	***************************************************/
		parameterType: DTO,VO,Domain
	 -->
	<insert id="insertStudent" parameterType="com.mybatis3.domain.Student">
	INSERT INTO STUDENTS (STUD_ID,NAME,EMAIL,DOB) 
	VALUES (STUDENTS_STUD_ID_SEQ.nextval,#{name},#{email},#{dob})
	
	</insert>
	<!-- 
	/**************************************************
	UPDATE
	***************************************************/
		parameterType: DTO,VO,Domain
	 -->
	<update id="updateStudentById" parameterType="com.mybatis3.domain.Student">
		update students set name =#{name}, email=#{email}, dob=#{dob}
		where stud_id=#{studId}
	
	</update>
	
	<!-- 
	/**************************************************
	DELETE
	***************************************************/
		parameterType: java.lang.Integer,java.lang.String
	-->
	<delete id="deleteStudentById" parameterType="int">
		delete from students where stud_id=#{studId}
	</delete>
	
	
	
	
	 
	
	
	
	
	
	
	
	
	
	
</mapper>